name: CI/CD Pipeline

run-name: "[${{ github.event.inputs.task || github.event_name }}] for ${{ github.event.inputs.project || github.ref_name }} from @${{ github.actor }}"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
  workflow_dispatch:
    inputs:
      task:
        description: 'What tusk should be triggered?'
        required: true
        type: choice
        default: 'test'
        options:
        - test
        - pack
        
      project:
        description: 'For what Project?'
        required: true
        type: choice
        options:
        - OutWit.Common
        - OutWit.Common.Aspects
        - OutWit.Common.CommandLine
        - OutWit.Common.Logging

jobs:
   # ===================================================================
  # == TASK 1: DISCOVER CHANGES                             ==
  # ===================================================================
  discover-changes:
    if: github.event_name != 'workflow_dispatch'
    name: Discover Changed Projects
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.filter.outputs.changes }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use paths-filter action
        id: filter
        uses: dorny/paths-filter@v3.0.2
        with:
          list-files: json
          
          filters: |
            Common: &common-paths
              - 'OutWit.Common/**'
              - 'OutWit.Common.Tests/**'

            Common.Aspects: &aspects-paths
              - 'OutWit.Common.Aspects/**'
              - 'OutWit.Common.Aspects.Tests/**'
              - *common-paths

            Common.CommandLine: &commandLine-paths
              - 'OutWit.Common.CommandLine/**'
              - 'OutWit.Common.CommandLine.Tests/**'

            Common.Logging: &logging-paths
              - 'OutWit.Common.Logging/**'
              - 'OutWit.Common.Logging.Tests/**'
              - *aspects-paths

  # ===================================================================
  # == TASK 2: RUN TESTS     ==
  # ===================================================================
  run-tests:
    if: github.event_name != 'workflow_dispatch' && needs.discover-changes.outputs.projects != '[]'

    name: Test ${{ matrix.project }}
    needs: discover-changes
    
    runs-on: windows-latest
    
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.discover-changes.outputs.projects) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Restore dependencies
        run: dotnet restore OutWit.sln
        
      - name: Run tests for ${{ matrix.project }}
        run: dotnet test OutWit.${{ matrix.project }}.Tests/OutWit.${{ matrix.project }}.Tests.csproj --configuration Release --no-restore  

  # ===================================================================
  # == TASK 3: RUN TEST BY REQUEST      ==
  # ===================================================================
  run-on-demand-task:
    if: github.event_name == 'workflow_dispatch'

    name: "Task: ${{ github.event.inputs.task }} for ${{ github.event.inputs.project }}"
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Restore dependencies
        run: dotnet restore OutWit.sln

      - name: Run specific tests
        if: github.event.inputs.task == 'test'
        run: dotnet test ${{ github.event.inputs.project }}.Tests/${{ github.event.inputs.project }}.Tests.csproj --configuration Release

      - name: Pack specific project
        if: github.event.inputs.task == 'pack'
        run: dotnet build ${{ github.event.inputs.project }}/${{ github.event.inputs.project }}.csproj --configuration Release